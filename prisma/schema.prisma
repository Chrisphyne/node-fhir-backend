generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Region {
  id         Int        @id @default(autoincrement())
  name       String     @unique
  created_at DateTime   @default(now())
  Counties   Counties[]
}

model Counties {
  id          Int           @id @default(autoincrement())
  name        String        @unique
  code        String?
  region      Region?       @relation(fields: [regionId], references: [id])
  created_at  DateTime      @default(now())
  SubCounties SubCounty[]
  regionId    Int?
  Designation Designation[]
}

model SubCounty {
  id         Int        @id @default(autoincrement())
  name       String     @unique
  countyId   Int
  county     Counties   @relation(fields: [countyId], references: [id])
  created_at DateTime   @default(now())
  Division   Division[]
}

model Division {
  id          Int        @id @default(autoincrement())
  name        String
  sub_county  SubCounty  @relation(fields: [subCountyId], references: [id])
  subCountyId Int
  Location    Location[]
}

model Location {
  id            Int             @id @default(autoincrement())
  name          String          @unique
  division      Division        @relation(fields: [divisionId], references: [id])
  created_at    DateTime        @default(now())
  divisionId    Int
  Ward          Ward[]
  PoliceStation PoliceStation[]
}

model Ward {
  id         Int       @id @default(autoincrement())
  name       String    @unique
  location   Location  @relation(fields: [locationId], references: [id])
  created_at DateTime  @default(now())
  locationId Int
  Village    Village[]
}

model Village {
  id          Int      @id @default(autoincrement())
  name        String   @unique
  description String?
  ward        Ward     @relation(fields: [wardId], references: [id])
  wardId      Int
  created_at  DateTime @default(now())
}

model IPRS_Person {
  id                Int       @id @default(autoincrement())
  id_no             String?   @unique
  passport_no       String?
  first_name        String
  middle_name       String?
  last_name         String
  gender            String
  nationality       String
  county_of_birth   String?
  district_of_birth String?
  division_of_birth String?
  location_of_birth String?
  date_of_birth     DateTime
  mug_shot          String? // Assuming the mug_shot field stores a file path
  Officer           Officer[]
}

model PoliceStation {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  location    Location? @relation(fields: [locationId], references: [id])
  created_at  DateTime  @default(now())
  Officer     Officer[]
  locationId  Int?
}

model Officer {
  id                    Int           @id @default(autoincrement())
  name                  String
  service_number        String        @unique
  password              String
  is_temporary_password Boolean       @default(true)
  email                 String        @unique
  phone_number          String
  role                  Role          @relation(fields: [roleId], references: [id])
  badge_number          String        @unique
  iprs                  IPRS_Person   @relation(fields: [iPRS_PersonId], references: [id])
  iPRS_PersonId         Int
  created_at            DateTime      @default(now())
  Designation           Designation[]
  station               PoliceStation @relation(fields: [stationId], references: [id])
  stationId             Int
  profile_photo         String?
  updated_at            DateTime      @updatedAt
  roleId                Int
}

model Role {
  id          Int           @id @default(autoincrement())
  name        String
  description String?
  created_at  DateTime      @default(now())
  Designation Designation[]
  Officer     Officer[]
}

model Designation {
  id         Int       @id @default(autoincrement())
  officer    Officer   @relation(fields: [officerId], references: [id])
  role       Role      @relation(fields: [roleId], references: [id])
  county     Counties? @relation(fields: [countiesId], references: [id])
  created_at DateTime  @default(now())
  officerId  Int
  countiesId Int?
  roleId     Int
}

model Registry {
  id           Int      @id @default(autoincrement())
  microservice String
  private      String   @default("http://localhost:3004")
  icon         String
  url          String
  created_at   DateTime @default(now())
}
